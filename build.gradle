plugins {
    id "jacoco"
    id "maven-publish"
    id "java-library"

    id "org.sonarqube" version "3.3"
    id "com.diffplug.spotless" version "6.12.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

group = groupId
version = artifactVersion

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation "org.jetbrains:annotations:23.0.0"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.1"
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
        exceptionFormat("full")
        showStandardStreams(false)
    }

    reports {
        html.enabled(false)
        junitXml.enabled(false)
    }
}

spotless {
    java {
        encoding("UTF-8")
        importOrder()
        removeUnusedImports()
        eclipse("4.21.0").configFile("${rootDir}/config/codestyle.xml")
    }
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "goodforgod"
        property "sonar.projectKey", "GoodforGod_dummymaker"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = "DummyMaker"
                url = "https://github.com/GoodforGod/dummymaker"
                description = "Library can fill Java Classes with random data and also export data in CSV/JSON/XML/SQL formats"

                license {
                    name = "MIT License"
                    url = "https://github.com/GoodforGod/dummymaker/blob/master/LICENSE"
                    distribution = "repo"
                }

                developer {
                    id = "GoodforGod"
                    name = "Anton Kurako"
                    email = "goodforgod.dev@gmail.com"
                    url = "https://github.com/GoodforGod"
                }

                scm {
                    connection = "scm:git:git://github.com/GoodforGod/dummymaker.git"
                    developerConnection = "scm:git:ssh://GoodforGod/dummymaker.git"
                    url = "https://github.com/GoodforGod/dummymaker/tree/master"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("OSS_USERNAME")
                password System.getenv("OSS_PASSWORD")
            }
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.encoding("UTF-8")
    options.incremental(true)
    options.fork = true
}

check.dependsOn jacocoTestReport
jacocoTestReport {
    reports {
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

javadoc {
    options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}

if (project.hasProperty("signing.keyId")) {
    apply plugin: "signing"
    signing {
        sign publishing.publications.mavenJava
    }
}